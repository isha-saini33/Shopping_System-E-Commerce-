{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","keyword","setKeyword","useState","history","useHistory","_jsxs","Form","onSubmit","e","preventDefault","push","concat","location","pathname","inline","children","_jsx","Control","name","onChange","target","value","className","placeholder","Button","variant","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","removeItem","isAdmin","Footer","Row","Col","Rating","_ref","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","addToCartHandler","disabled","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","placeOrder","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","addPayPalScript","script","document","createElement","onload","body","appendChild","Id","href","isDelivered","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","App","Router","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.71336004.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n                placeholder='search'\n            ></Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Avatar</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; avatar 2024</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-dark'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{product.name} (${product.price})</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}